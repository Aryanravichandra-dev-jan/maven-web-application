def sendslackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

node{

buildName 'dev - ${BUILD_NUMBER}'

def mavenHome = tool name: "maven3.8.5"

echo " The Node name is: ${env.NODE_NAME} "
echo  " The Job name is: ${env.JOB_NAME} "
echo "The Build number is: ${env.BUILD_NUMBER} "

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: '']])

try{
//checkout stage
 stage('checkoutcode'){
 git branch: 'development', credentialsId: 'd759bfd6-69ba-48f8-b31b-71fe81fa31ae',
 url: 'https://github.com/Aryanravichandra-dev-jan/maven-web-application.git'
 }
 
 //Build stage
 stage('Build'){
 sh "$mavenHome/bin/mvn clean package"
 }

//Generate sonarqube Report
stage('sonarqubeReport'){
sh "$mavenHome/bin/mvn sonar:sonar" 
}

//upload artifactory into artifactory repo
stage('UploadArtifactsintoNexus'){
sh "$mavenHome/bin/mvn deploy"
}

//deploy app into tomcat server
stage('DeployAppIntoTomcat'){
sshagent(['665c7eff-c5f2-4772-bdda-647bb00d9e88']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@65.2.128.27:/opt/apache-tomcat-9.0.60/webapps" 
   }
  }

} //try block closing

catch(e){
CurrentBuild.result = "FAILED"
}

finally{
sendsslackNotifications(CurrentBuild.result)
}

 }//Node closing
